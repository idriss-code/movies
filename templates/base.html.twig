<!DOCTYPE html>
<html lang="{{ app.request.locale }}">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}{{ 'nav.brand'|trans }}{% endblock %}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="{{ asset('styles/app.css') }}">
    {% block stylesheets %}{% endblock %}
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand fw-bold" href="{{ path('app_home') }}">{{ 'nav.brand'|trans }}</a>
            
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_home') }}">{{ 'nav.home'|trans }}</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_studio_index') }}">{{ 'nav.studios'|trans }}</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_director_index') }}">{{ 'nav.directors'|trans }}</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ path('app_actor_index') }}">{{ 'nav.actors'|trans }}</a>
                    </li>
                </ul>

                <div class="d-flex align-items-center">
                    <form class="d-flex me-3" method="GET" action="{{ path('app_search') }}">
                        <input class="form-control me-2" type="search" name="q" 
                               placeholder="{{ 'nav.search_placeholder'|trans }}" 
                               value="{{ app.request.query.get('q') }}" aria-label="Search">
                        <button class="btn btn-outline-light" type="submit">{{ 'nav.search'|trans }}</button>
                    </form>
                    
                    <div class="dropdown">
                        <button class="btn btn-outline-light dropdown-toggle btn-sm" type="button" data-bs-toggle="dropdown">
                            {% if app.request.locale == 'fr' %}ðŸ‡«ðŸ‡· FR{% elseif app.request.locale == 'es' %}ðŸ‡ªðŸ‡¸ ES{% else %}ðŸ‡¬ðŸ‡§ EN{% endif %}
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="{{ path('app_language_switch', {locale: 'en'}) }}">ðŸ‡¬ðŸ‡§ {{ 'language.english'|trans }}</a></li>
                            <li><a class="dropdown-item" href="{{ path('app_language_switch', {locale: 'fr'}) }}">ðŸ‡«ðŸ‡· {{ 'language.french'|trans }}</a></li>
                            <li><a class="dropdown-item" href="{{ path('app_language_switch', {locale: 'es'}) }}">ðŸ‡ªðŸ‡¸ {{ 'language.spanish'|trans }}</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Adult Warning Modal -->
    <div class="modal fade" id="adultWarningModal" tabindex="-1" aria-labelledby="adultWarningModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                    <h5 class="modal-title" id="adultWarningModalLabel">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i>
                        {{ 'warning.adult_content_title'|trans }}
                    </h5>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label small" style="color: #495057; font-weight: 600;">{{ 'warning.select_language'|trans }}</label>
                        <select class="form-select form-select-sm" id="languageSelector">
                            <option value="fr" {{ app.request.locale == 'fr' ? 'selected' : '' }}>ðŸ‡«ðŸ‡· FranÃ§ais</option>
                            <option value="en" {{ app.request.locale == 'en' ? 'selected' : '' }}>ðŸ‡¬ðŸ‡§ English</option>
                            <option value="es" {{ app.request.locale == 'es' ? 'selected' : '' }}>ðŸ‡ªðŸ‡¸ EspaÃ±ol</option>
                        </select>
                    </div>
                    <p class="mb-0" id="warningMessage">{{ 'warning.adult_content_message'|trans }}</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="adultWarningCancel">
                        {{ 'common.cancel'|trans }}
                    </button>
                    <button type="button" class="btn btn-primary" id="adultWarningConfirm">
                        {{ 'common.understand'|trans }}
                    </button>
                </div>
            </div>
        </div>
    </div>

    <main class="container my-4">
        {% block body %}{% endblock %}
    </main>

    <footer class="bg-light py-4 mt-5">
        <div class="container text-center text-muted">
            <p>{{ 'common.copyright'|trans({'%year%': 'now'|date('Y')}) }}</p>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="{{ asset('scripts/app.js') }}"></script>
    
    <script>
    // Adult Warning Modal Logic
    document.addEventListener('DOMContentLoaded', function() {
        // Fonction pour gÃ©rer les cookies
        function setCookie(name, value, days) {
            const expires = new Date();
            expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000));
            document.cookie = name + '=' + value + ';expires=' + expires.toUTCString() + ';path=/';
        }
        
        function getCookie(name) {
            const nameEQ = name + '=';
            const ca = document.cookie.split(';');
            for (let i = 0; i < ca.length; i++) {
                let c = ca[i];
                while (c.charAt(0) === ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
            }
            return null;
        }
        
        // Traductions pour les diffÃ©rentes langues
        const translations = {
            fr: {
                title: "Avertissement - Contenu pour adultes",
                message: "Ce site contient du contenu destinÃ© aux adultes. En continuant, vous confirmez avoir l'Ã¢ge lÃ©gal requis dans votre juridiction pour accÃ©der Ã  ce type de contenu.",
                selectLanguage: "Choisir la langue",
                cancel: "Annuler",
                understand: "J'ai compris"
            },
            en: {
                title: "Warning - Adult Content",
                message: "This site contains content intended for adults. By continuing, you confirm that you are of legal age in your jurisdiction to access this type of content.",
                selectLanguage: "Select language",
                cancel: "Cancel",
                understand: "I understand"
            },
            es: {
                title: "Advertencia - Contenido para adultos",
                message: "Este sitio contiene contenido destinado a adultos. Al continuar, confirmas que tienes la edad legal requerida en tu jurisdicciÃ³n para acceder a este tipo de contenido.",
                selectLanguage: "Seleccionar idioma",
                cancel: "Cancelar",
                understand: "Entiendo"
            }
        };
        
        // Fonction pour mettre Ã  jour le contenu du modal
        function updateModalContent(lang) {
            const trans = translations[lang];
            document.getElementById('adultWarningModalLabel').innerHTML = 
                '<i class="bi bi-exclamation-triangle-fill me-2"></i>' + trans.title;
            document.getElementById('warningMessage').textContent = trans.message;
            const label = document.querySelector('label[for="languageSelector"]');
            label.textContent = trans.selectLanguage;
            label.style.color = '#495057';
            label.style.fontWeight = '600';
            document.getElementById('adultWarningCancel').textContent = trans.cancel;
            document.getElementById('adultWarningConfirm').textContent = trans.understand;
        }
        
        // VÃ©rifier si l'utilisateur a dÃ©jÃ  vu l'avertissement
        const hasSeenWarning = getCookie('adult_warning_seen');
        
        if (!hasSeenWarning) {
            // Afficher le popup si pas encore vu
            const modal = new bootstrap.Modal(document.getElementById('adultWarningModal'));
            modal.show();
            
            // GÃ©rer le changement de langue
            document.getElementById('languageSelector').addEventListener('change', function() {
                const selectedLang = this.value;
                updateModalContent(selectedLang);
            });
        }
            
        // Handle confirm button
        document.getElementById('adultWarningConfirm').addEventListener('click', function() {
            const selectedLang = document.getElementById('languageSelector').value;
            // DÃ©finir le cookie pour 365 jours
            setCookie('adult_warning_seen', 'true', 365);
            const modal = bootstrap.Modal.getInstance(document.getElementById('adultWarningModal'));
            modal.hide();
            
            // Rediriger vers la langue sÃ©lectionnÃ©e si diffÃ©rente de la langue actuelle
            if (selectedLang !== '{{ app.request.locale }}') {
                window.location.href = '/language/' + selectedLang;
            }
        });
        
        // Handle cancel button - redirect to previous page or home
        document.getElementById('adultWarningCancel').addEventListener('click', function() {
            if (document.referrer && document.referrer !== window.location.href) {
                window.location.href = document.referrer;
            } else {
                window.location.href = '{{ path('app_home') }}';
            }
        });
    });
    </script>
    
    {% block javascripts %}{% endblock %}
    {% block importmap %}{{ importmap('app') }}{% endblock %}
</body>
</html>